[metadata]
name = basie
description = "schedule creator for italian radiotelescopes"
long_description = file: README.rst
author = "Marco Bartolini, Simona Righini"
author_email = "bartolini@ira.inaf.it"
maintainer = "Sergio Poppi"
maintainer_email = "sergio.poppi@inaf.it"
license = BSD
license_file = LICENSE
url = http://github.com/discos/basie/
edit_on_github = True
github_project = discos/basie/
keywords = astronomy, astrophysics, radiotelescopes,
classifiers =
    Intended Audience :: Science/Research
    License :: OSI Approved :: BSD License
    Operating System :: OS Independent
    Programming Language :: C
    Programming Language :: Cython
    Programming Language :: Python :: 3
    Programming Language :: Python :: Implementation :: CPython
    Topic :: Scientific/Engineering :: Astronomy
    Topic :: Scientific/Engineering :: Physics

[options]
zip_safe = False
packages = find:
python_requires = >=3.8
setup_requires = setuptools_scm
install_requires =
    BTrees
    argparse
    numpy
    astropy
    persistent
    numpy
    astropy
    persistent
    pickleshare
    transaction
    zc.lockfile
    zdaemon
    ZConfig
    ZODB
    zodbpickle
    zope.interface
    future


[options.extras_require]
all =

test =
    coverage>=4.0.3
    nose>=1.3.7
    unittest2; python_version <= '2.7'

docs =
    sphinx-astropy
    sphinx-toolbox

[options.entry_points]
console_scripts =
    runbasie = basie:cmd_line

[options.package_data]
* = *.fits, *.evt, *.rmf

;[config.logging_helper]
;# Threshold for the logging messages. Logging messages that are less severe
;# than this level will be ignored. The levels are 'DEBUG', 'INFO', 'WARNING',
;# 'ERROR'
;log_level = 'INFO'
;# Whether to use color for the level names
;use_color = True
;# Whether to log warnings.warn calls
;log_warnings = True
;# Whether to log exceptions before raising them
;log_exceptions = True
;# Whether to always log messages to a log file
;log_to_file = True
;# The file to log messages to
;log_file_path = '~/.HENDRICS.log'
;# Threshold for logging messages to log_file_path
;log_file_level = 'INFO'
;# Format for log file entries
;#log_file_format = '%(asctime)s, %(origin)s, %(levelname)s, %(message)s'

[tool:pytest]
testpaths = "basie"
astropy_header = true
doctest_plus = enabled
text_file_format = rst
addopts = --doctest-rst
filterwarnings =


[coverage:run]
omit =

[coverage:report]
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover
    # Don't complain about packages we have installed
    except ImportError
    # Don't complain if tests don't hit assertions
    raise AssertionError
    raise NotImplementedError
    # Don't complain about script hooks
    def main\(.*\):
    # Ignore branches that don't pertain to this version of Python
    pragma: py{ignore_python_version}
    # Don't complain about IPython completion helper
    def _ipython_key_completions_


[pycodestyle]
max-line-length = 100
exclude = extern,*parsetab.py,*lextab.py,test_*.py,__*.py


[flake8]
max-line-length = 100
exclude = extern,*parsetab.py,*lextab.py,test_*.py,__*.py
